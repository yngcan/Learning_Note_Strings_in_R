# take a peek of USArrests
head(USArrests)
## Abbreviating strings
# names of states
states = rownames(USArrests)

# substr
substr(x = states, start = 1, stop = 4)

# abbreviate state names
states2 = abbreviate(states)

# remove vector names (for convenience)
names(states2) = NULL
states2

# abbreviate state names with 5 letters
states3 =abbreviate(states, minlength = 5)
names(states3) = NULL
states3

##Getting the longest name

# size (in characters) of each name
state_chars = nchar(states)
# longest name
states[which(state_chars == max(state_chars))]


##Selecting States
# get states names with 'k'
grep(pattern = "k", x = states, value = TRUE)

# get states names with 'w'
grep(pattern = "w", x = states, value = TRUE)

# get states names with 'w' or 'W' 
grep(pattern = "[wW]", x = states, value = TRUE)

# get states names with 'w'
grep(pattern = "w", x = tolower(states), value = TRUE)

# get states names with 'w'
grep(pattern = "w", x = states, value = TRUE, ignore.case = TRUE)

## Some computations
# histogram
hist(nchar(states), main = "Histogram",
     xlab = "number of characters in US State names")

# position of a's
positions_a = gregexpr(pattern = "a", text = states, ignore.case = TRUE)

# how many a's
num_a = sapply(positions_a, function(x) ifelse(x[1] > 0, length(x), 0))
num_a

# load stringr (remember to install it first)
library(stringr)
# total number of a's
str_count(states, "a")

# total number of a's
str_count(tolower(states), "a")

# vector of vowels
vowels = c("a", "e", "i", "o", "u")
# vector for storing results
num_vowels = vector(mode = "integer", length = 5)
# calculate number of vowels in each name
for (j in seq_along(vowels)) {
  num_aux = str_count(tolower(states), vowels[j])
  num_vowels[j] = sum(num_aux)
}
# add vowel names
names(num_vowels) = vowels
# total number of vowels
num_vowels

# sort them in decreasing order
sort(num_vowels, decreasing = TRUE)

# barplot
barplot(num_vowels, main = "Number of vowels in USA States names",
        border = NA, ylim = c(0, 80))
